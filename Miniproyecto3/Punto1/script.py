"This code solve the Poisson equation using the FEM method using a random mesh in 1D on [0,1]."
"The mesh is generated by using a gaussian distribution to create random points in the interval [0,1], but we do this using the mean as the coordinate of each point in a regular mesh and a standard deviation that is a parameter of the function."
"The code uses the scipy library to solve the linear system of equations that arises from the FEM method."
"The code also uses the matplotlib library to plot the solution."


import numpy as np
import matplotlib.pyplot as plt
import scipy as sp

def generate_random_mesh(n, std_dev):
    """
    Generate a random mesh in the interval [0,1] using a Gaussian distribution.
    
    Parameters:
    n (int): Number of elements in the mesh.
    std_dev (float): Standard deviation of the Gaussian distribution.
    
    Returns:
    np.ndarray: Array of mesh points.
    """
    # Generate n+1 points in the interval [0,1]
    regular_points = np.linspace(0, 1, n + 1)
    
    # Generate random perturbations using Gaussian distribution
    perturbations = np.random.normal(0, std_dev, n + 1)
    
    # Create random mesh points and ensure they are within [0,1]
    random_mesh = np.clip(regular_points + perturbations, 0, 1)

    # Ensure the first and last points are exactly 0 and 1
    random_mesh[0] = 0.0
    random_mesh[-1] = 1.0

    # Ensure the mesh points are inside the interval [0,1]
    random_mesh = np.clip(random_mesh, 0, 1)
    
    # Sort the mesh points to ensure they are in increasing order
    random_mesh = np.sort(random_mesh)
    
    return random_mesh


def plot_mesh(mesh):
    """
    Plot the generated mesh.
    
    Parameters:
    mesh (np.ndarray): Array of mesh points.
    """
    plt.figure(figsize=(10, 1))
    plt.plot(mesh, np.zeros_like(mesh), 'o')
    plt.yticks([])
    plt.title('Generated Random Mesh')
    plt.xlabel('x')
    plt.grid()
    plt.show()

plot_mesh(generate_random_mesh(10, 0.1))  # Example usage of plot_mesh with a random mesh